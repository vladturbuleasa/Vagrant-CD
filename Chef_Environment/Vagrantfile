# -*- mode: ruby -*-
# vi: set ft=ruby :

$script_installChef12 = <<SCRIPT
echo "Install of Chef server started..."
echo "Setting up hostname..."
echo "nameserver 8.8.8.8" >> /etc/resolv.conf
mv /etc/hosts /etc/hosts.old
touch /etc/hosts
echo "192.168.56.5 chefServer" >> /etc/hosts
echo "127.0.0.1 localhost" >> /etc/hosts
cd /opt/
echo "Downloading chef from repo..."
wget -nv -O /opt/chef-server-core_12.3.0-1_amd64.deb https://web-dl.packagecloud.io/chef/stable/packages/ubuntu/trusty/chef-server-core_12.3.0-1_amd64.deb
echo "Starting the installation onf chef-server-core..."
dpkg -i chef-server*
echo "Running the reconfigure command..."
chef-server-ctl reconfigure
echo "Checking Chef Server..."
chef-server-ctl status
echo "Install of Chef server Done..."
echo "Installing the Chef 12 GUI..."
chef-server-ctl install opscode-manage
opscode-manage-ctl reconfigure
chef-server-ctl reconfigure
echo "Installationg of GUI done..."
SCRIPT

$script_installChefDK = <<SCRIPT
echo "Downloading ChefDK..."
wget -nv -O /opt/chefdk_0.10.0-1_amd64.deb https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/12.04/x86_64/chefdk_0.10.0-1_amd64.deb
echo "Installing ChefDK..."
cd /opt; dpkg -i chefdk_0.10.0-1_amd64.deb
SCRIPT

Vagrant.configure("2") do |config|
  
	config.vm.define "chefServer" do |chefServer|
     chefServer.vm.box = "ubuntu/trusty64"
     chefServer.vm.hostname = "chefServer"
     chefServer.vm.synced_folder ".", "/vagrant", type: "virtualbox", disabled: true
     chefServer.vm.provision :shell, :inline => $script_installChef12
     chefServer.vm.provision :shell, :inline => $script_installChefDK
     chefServer.vm.network "private_network", ip: "192.168.56.5", virtualbox__hostonly: true
     #chefServer.vm.network "private_network", ip: "172.16.1.5", virtualbox__intnet: true
     chefServer.vm.network "forwarded_port", guest: 22, host: 5022, id: "ssh", auto_correct: true
     #chefServer.vm.network "forwarded_port", guest: 443, host: 8443, id: "ChefServerGUI"
     chefServer.vm.provider "virtualbox" do |vm|
      vm.name = "ChefServer12"
			vm.customize [
							'modifyvm', :id,
							'--memory', '2048'
							
						]
		end
  end
  
  config.vm.define "appNode1" do |appNode1|
     appNode1.vm.box = "nrel/CentOS-6.7-x86_64"
     appNode1.vm.hostname = "appNode1"
     appNode1.vm.synced_folder ".", "/vagrant", type: "virtualbox", disabled: true
     appNode1.vm.network "private_network", ip: "192.168.56.6", virtualbox__hostonly: true
     #appNode1.vm.network "private_network", ip: "172.16.1.6", virtualbox__intnet: true
     appNode1.vm.network "forwarded_port", guest: 22, host: 6022, id: "ssh", auto_correct: true
     appNode1.vm.provider "virtualbox" do |vm|
      vm.name = "appNode1"
			vm.customize [
							'modifyvm', :id,
							'--memory', '512'
							
						]
		end
  end
  
  config.vm.define "appNode2" do |appNode2|
     appNode2.vm.box = "nrel/CentOS-6.7-x86_64"
     appNode2.vm.hostname = "appNode2"
     appNode2.vm.synced_folder ".", "/vagrant", type: "virtualbox", disabled: true
     appNode2.vm.network "private_network", ip: "192.168.56.7", virtualbox__hostonly: true
     #appNode2.vm.network "private_network", ip: "172.16.1.7", virtualbox__intnet: true
     appNode2.vm.network "forwarded_port", guest: 22, host: 7022, id: "ssh", auto_correct: true
     appNode2.vm.provider "virtualbox" do |vm|
      vm.name = "appNode2"
			vm.customize [
							'modifyvm', :id,
							'--memory', '512'
							
						]
		end
  end

end